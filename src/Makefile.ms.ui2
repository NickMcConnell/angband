# File: Makefile.ms.ui2
#
# Cross compiles Windows version of Angband
# with textui2 and SDL2, using mingw-w64.

.PHONY: default devel clean dist distclean args
default: devel

### Basic compiler stuff ###

# architecture;
# i686 or x86_64
ARCH := i686

# version of mingw
CC := $(ARCH)-w64-mingw32-gcc

CFLAGS := \
	-std=c99 \
	-g \
	-O2 \
	-Wall -Wextra -Wfatal-errors -Wno-unused-parameter -Wpedantic

CPPFLAGS := \
	-DUSE_PRIVATE_PATHS -DWINDOWS -DUSE_SOUND_SDL2 -DSOUND

LDFLAGS :=

# We link libm statically
MINGW_STATIC_LIBS_DIR := /usr/i686-w64-mingw32/lib

### SDL module stuff ###

# Directory where SDL2 and associated libraries,
# namely, SDL2_image, SDL2_ttf and SDL2_mixer
# (for mingw) are installed
SDL_BASE_DIR := /home/vic/misc/SDL2_mingw

SDL_ARCH := $(ARCH)-w64-mingw32

SDL_MODULES := MAIN IMAGE TTF MIXER

SDL_MAIN_DIR := $(SDL_BASE_DIR)/SDL2-2.0.5
SDL_MAIN_FILES := \
	SDL2.dll

SDL_IMAGE_DIR := $(SDL_BASE_DIR)/SDL2_image-2.0.1
SDL_IMAGE_FILES := \
	SDL2_image.dll \
	zlib1.dll \
	LICENSE.zlib.txt \
	libpng16-16.dll \
	LICENSE.png.txt

SDL_TTF_DIR := $(SDL_BASE_DIR)/SDL2_ttf-2.0.14
SDL_TTF_FILES := \
	SDL2_ttf.dll \
	libfreetype-6.dll \
	LICENSE.freetype.txt

SDL_MIXER_DIR := $(SDL_BASE_DIR)/SDL2_mixer-2.0.1
SDL_MIXER_FILES := \
	SDL2_mixer.dll \
	smpeg2.dll \
	LICENSE.smpeg.txt

SDL_DIRS := \
	$(foreach m,$(SDL_MODULES),$(SDL_$(m)_DIR))

SDL_FILES := \
	$(foreach m,$(SDL_MODULES),\
		$(foreach f,$(SDL_$(m)_FILES),\
			$(SDL_$(m)_DIR)/$(SDL_ARCH)/bin/$(f)))

SDL_DEVEL_FILES := \
	$(addprefix ../,$(notdir $(SDL_FILES)))

CPPFLAGS += \
	$(foreach d,$(SDL_DIRS),-I$(d)/$(SDL_ARCH)/include/SDL2) \
	-DUSE_SDL2 -DMAIN=SDL_main

LDFLAGS += \
	$(foreach d,$(SDL_DIRS),-L$(d)/$(SDL_ARCH)/lib) \
	-lmingw32 \
	-mwindows \
	-lSDL2main \
	-lSDL2 \
	-lSDL2_ttf \
	-lSDL2_image \
	-lSDL2_mixer \
	$(MINGW_STATIC_LIBS_DIR)/libm.a

MAINOBJS := main.o main2-sdl2.o sound2-sdl2.o

### Targets and objects ###

# Makefile.src contains an up-to-date set of
# object files to compile, so we include it
include Makefile.src.ui2

# Object definitions
OBJS := $(BASEOBJS) $(MAINOBJS)

# Makefile.dep creates dependency info from OBJS
include Makefile.dep.ui2

args:
	$(info CFLAGS = $(CFLAGS))
	$(info CPPFLAGS = $(CPPFLAGS))
	$(info LDFLAGS = $(LDFLAGS))
	$(info SDL_FILES = $(SDL_FILES))
	$(info OBJS = $(OBJS))

# Name of binary
EXE := $(PROGNAME).exe

%.o: %.c
	@printf "%10s %-20s\n" CC $<
	@$(CC) $(CPPFLAGS) $(CFLAGS) -o $@ -c $<

$(EXE): $(OBJS)
	@printf "%10s %-20s\n" LINK $@
	@$(CC) $(CFLAGS) -o $(EXE) $^ $(LDFLAGS)

devel: $(EXE) $(SDL_DEVEL_FILES)
	cp $(EXE) ..

$(SDL_DEVEL_FILES):
	cp $(filter %$(notdir $@),$(SDL_FILES)) ..

clean:
	rm -f $(OBJS) $(EXE) ../$(EXE) $(SDL_DEVEL_FILES)

### Make a distribution ###

MAIN_DIR := ..
DIST_DIR := angband-$(ARCH)
MAIN_LIB := $(MAIN_DIR)/lib
DIST_LIB := $(DIST_DIR)/lib

DIST_FILE := $(MAIN_DIR)/$(DIST_DIR).zip

LIB_DIRS := \
	user \
	user/scores \
	user/save \
	user/info

LIB_FILES := \
	gamedata/*.txt \
	customize/*.prf \
	help/*.txt \
	help/*.hlp \
	screens/*.txt \
	fonts/*.fon \
	fonts/*.ttf \
	tiles/old \
	tiles/adam-bolt \
	tiles/gervais \
	tiles/nomad \
	tiles/shockbolt \
	tiles/list.txt \
	sounds/*.mp3 \
	icons/*.png

TEXT_FILES := \
	changes.txt \
	readme.txt \
	thanks.txt \
	copying.txt \
	faq.txt

dist: all
	@[ ! -e $(DIST_DIR) ] || rm -rf $(DIST_DIR)
	$(info Making directories...)
	@mkdir -p $(foreach d,$(LIB_DIRS),$(DIST_LIB)/$(d))
	@mkdir -p $(foreach d,$(LIB_FILES),$(DIST_LIB)/$(dir $(d)))
	$(info Copying lib files...)
	@for f in $(foreach f,$(LIB_FILES),'$(f)'); do \
		cp -r $(MAIN_LIB)/$$f $(DIST_LIB)/$$(dirname "$$f"); \
	done
	$(info Copying text files...)
	@for f in $(foreach f,$(TEXT_FILES),'$(f)'); do \
		perl -lpe 'BEGIN {$$\ = "\r\n"}; tr/\r//d' < $(MAIN_DIR)/$$f > $(DIST_DIR)/$$f; \
	done
	$(info Copying binary...)
	@cp $(EXE) $(DIST_DIR)
	$(info Copying dlls...)
	@cp $(SDL_FILES) $(DIST_DIR)
	$(info Making a zip file...)
	@zip -r $(DIST_FILE) $(DIST_DIR) > /dev/null
	$(info Removing temporary directory...)
	@rm -rf $(DIST_DIR)
	$(info Windows distribution is in $(DIST_FILE))

distclean: clean
	rm -f $(DIST_FILE)
